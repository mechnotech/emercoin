# Generated by Django 3.1.7 on 2021-04-07 07:39

import ckeditor.fields
import ckeditor_uploader.fields
import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import info.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutEmer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Заголовок')),
                ('title_en', models.CharField(blank=True, max_length=20, null=True, verbose_name='Title')),
                ('text', models.TextField(max_length=500, verbose_name='Описание')),
                ('text_en', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('image', models.FileField(max_length=150, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Изображение блока')),
            ],
            options={
                'verbose_name': 'Блок о блокчейне',
                'verbose_name_plural': 'Блоки о блокчейне',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, help_text='Часть URL адреса новости, если не указывать явно - заполняется автоматически из Названия', max_length=250, unique=True, verbose_name='Slug')),
                ('logo', models.FileField(default=None, help_text='Размер 100*40 пикселей', max_length=150, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Логотип Компании малый')),
                ('logo_big', models.FileField(default=None, help_text='Размер 200*80 пикселей', max_length=150, null=True, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Большой логотип Компании')),
                ('is_partner', models.BooleanField(default=True, help_text='Заключили партнерство?', verbose_name='Партнер?')),
                ('is_used', models.BooleanField(default=False, help_text='Применяют технологии?', verbose_name='Применяют?')),
                ('text', ckeditor.fields.RichTextField(max_length=1500, verbose_name='Краткое описание')),
                ('text_en', ckeditor.fields.RichTextField(blank=True, max_length=1500, null=True, verbose_name='Short description')),
                ('text_more', ckeditor.fields.RichTextField(max_length=2000, verbose_name='Дополнительное описание')),
                ('text_more_en', ckeditor.fields.RichTextField(blank=True, max_length=2000, null=True, verbose_name='More description')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата публикаци')),
                ('link', models.URLField(verbose_name='Ссылка на публикацию')),
                ('brif', models.CharField(max_length=80, verbose_name='Заголовок публикации')),
            ],
            options={
                'verbose_name': 'Публикация СМИ',
                'verbose_name_plural': 'Публикации СМИ',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Название СМИ')),
                ('logo', models.FileField(default=None, max_length=150, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Логотип СМИ малый')),
                ('logo_big', models.FileField(default=None, max_length=150, null=True, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Большой логотип СМИ')),
            ],
            options={
                'verbose_name': 'СМИ',
                'verbose_name_plural': 'СМИ',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Заголовок')),
                ('title_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, help_text='Часть URL адреса новости, если не указывать явно - заполняется автоматически из Заголовка', max_length=250, unique=True, verbose_name='Slug')),
                ('date', models.DateTimeField(verbose_name='Дата и время')),
                ('image', models.ImageField(blank=True, help_text='Изображение 420*280 (примерно)', max_length=250, null=True, upload_to='', verbose_name='Картинка новости')),
                ('image_en', models.ImageField(blank=True, help_text='Image ~ 420*280 px', max_length=250, null=True, upload_to='', verbose_name='News image')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='<p>Этот раздел ещё не переведен на русский</p> <p>Вы поможете сообществу, если переведете его</p> <p>&nbsp;</p> <p><a class="button button-telegram" href="https://t.me/emernews" onclick="dataLayer.push({\'event\': \'telegram_community\'});" rel="nofollow" target="_blank">Telegram</a></p>', help_text='Текст (не более 10 тыс символов)', max_length=10000, verbose_name='Текст новости')),
                ('text_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='<p>This section has not been translated yet.</p><p>You can help the community by translating this section into English</p><p><a class="button button-telegram" href="https://t.me/emerсoin_official" onclick="dataLayer.push({\'event\': \'telegram_community\'});" rel="nofollow" target="_blank">Telegram</a></p>', help_text='Post (no more than 10K letters)', max_length=10000, verbose_name='News text')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='Имя')),
                ('name_en', models.CharField(blank=True, max_length=90, null=True, verbose_name='Имя')),
                ('image', models.ImageField(help_text='Изображение 360*360 квадрат (примерно)', max_length=250, upload_to='', verbose_name='Фото')),
                ('whois', models.CharField(max_length=150, verbose_name='Роль или должность')),
                ('whois_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='The role')),
                ('info_short', ckeditor.fields.RichTextField(help_text='Не более 250 символов', max_length=450, verbose_name='Краткое инфо')),
                ('info_short_en', ckeditor.fields.RichTextField(blank=True, help_text='No more 250 letters', max_length=450, null=True, verbose_name='Short_info')),
                ('info', ckeditor.fields.RichTextField(blank=True, help_text='Не более 550 символов', max_length=1500, verbose_name='Полное инфо')),
                ('info_en', ckeditor.fields.RichTextField(blank=True, help_text='No more 550 letters', max_length=1500, null=True, verbose_name='Full info')),
                ('is_team', models.BooleanField(default=False, verbose_name='Член команды?')),
                ('is_adviser', models.BooleanField(default=False, verbose_name='Адвайзер?')),
                ('linkedin', models.URLField(blank=True, max_length=250, verbose_name='LinkedIn')),
                ('facebook', models.URLField(blank=True, max_length=250, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, max_length=250, verbose_name='Twitter')),
            ],
            options={
                'verbose_name': 'Персона',
                'verbose_name_plural': 'Персоны',
            },
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(help_text='URL (не более 200 символов)', unique=True, validators=[django.core.validators.URLValidator], verbose_name='Ссылка c Промо на новость (Главный слайдер)')),
                ('bg_color', colorfield.fields.ColorField(default='#FF0000', max_length=18, verbose_name='Цвет фона полдожки')),
                ('mobile_img', models.ImageField(help_text='Картинка для мобильного (450*350 пиксел) не больше 1Mb)', max_length=150, upload_to='info/', validators=[info.models.mobile_image_validator], verbose_name='Картинка для мобильного')),
                ('desktop_img', models.ImageField(help_text='Картинка для десктопа (1110*390 пиксел, не больше 5 Мб)', max_length=150, upload_to='info/', validators=[info.models.desktop_image_validator], verbose_name='Картинка для десктопа')),
                ('mobile_img_en', models.ImageField(blank=True, help_text='If exists ~(450*350 pixel) no more 1Mb please)', max_length=150, null=True, upload_to='info/', verbose_name='Mobile image')),
                ('desktop_img_en', models.ImageField(blank=True, help_text='If exists ~(1110*390 pixel, no more 5 Мб please)', max_length=150, null=True, upload_to='info/', verbose_name='Desktop image')),
            ],
            options={
                'verbose_name': 'Промо слайд',
                'verbose_name_plural': 'Промо слайды',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='RoadMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(default=2013, help_text='Год, например 2021', validators=[django.core.validators.MinValueValidator(2012), django.core.validators.MaxValueValidator(2100)], verbose_name='Год')),
                ('text', ckeditor.fields.RichTextField(help_text='События или задачи года (каждое с новой строки)', max_length=1000, verbose_name='События')),
                ('text_en', ckeditor.fields.RichTextField(blank=True, help_text='Events and goals of year (with new paragraph for each)', max_length=1000, null=True, verbose_name='Goals')),
            ],
            options={
                'verbose_name': 'Год Дорожной карты',
                'verbose_name_plural': 'Дорожная карта',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=15, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Часть URL пути, например emerdns', verbose_name='Slug')),
                ('text', ckeditor.fields.RichTextField(max_length=1500, verbose_name='Краткое описание')),
                ('text_en', ckeditor.fields.RichTextField(blank=True, max_length=1500, null=True, verbose_name='Short description')),
                ('text_more', ckeditor.fields.RichTextField(max_length=2000, verbose_name='Дополнительное описание')),
                ('text_more_en', ckeditor.fields.RichTextField(blank=True, max_length=2000, null=True, verbose_name='Long description')),
                ('scenarios', models.TextField(default='Там | Тут', help_text='Список тезисисов, разделитель  - |', max_length=1000, verbose_name='Где применимо')),
                ('scenarios_en', models.TextField(blank=True, default='Here | and Here', help_text='List of theses, divider  - |', max_length=1000, null=True, verbose_name='Where can use')),
                ('image', models.FileField(max_length=150, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Изображение блока (большое)')),
                ('icon', models.FileField(default=None, max_length=150, upload_to='info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'svg'])], verbose_name='Иконка блока')),
            ],
            options={
                'verbose_name': 'Сервис Эмера',
                'verbose_name_plural': 'Сервисы Эмера',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='MediaContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.content')),
                ('t_media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.media')),
            ],
        ),
        migrations.AddField(
            model_name='media',
            name='contents',
            field=models.ManyToManyField(related_name='medium', through='info.MediaContent', to='info.Content'),
        ),
    ]
